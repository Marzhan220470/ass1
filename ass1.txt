class SingletonMeta(type):
    _instances = {}

    def __call__(cls, *args, **kwargs):
        if cls not in cls._instances:
            cls._instances[cls] = super(SingletonMeta, cls).__call__(*args, **kwargs)
        return cls._instances[cls]

class Singleton(metaclass=SingletonMeta):
    def __init__(self):
        self.value = None

    def initialize(self, value):
        self.value = value

# Usage
singleton1 = Singleton()
singleton1.initialize(10)

singleton2 = Singleton()
print(singleton2.value) 

print(singleton1 is singleton2) 
